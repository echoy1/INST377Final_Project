{
  "{\"sourceRoot\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10\",\"filename\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10",
      "filename": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite3\"));\n\nvar _sqlite2 = require(\"sqlite\");\n\nvar _writeuser = _interopRequireDefault(require(\"./libraries/writeuser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dbSettings = {\n  filename: \"./tmp/database.db\",\n  driver: _sqlite[\"default\"].Database\n};\nvar app = (0, _express[\"default\"])();\nvar port = process.env.PORT || 3000;\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"][\"static\"](\"public\"));\n\nfunction processDataForFrontEnd(req, res) {\n  var baseURL = \"\"; // Enter the URL for the data you would like to retrieve here\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n\n  (0, _nodeFetch[\"default\"])(baseURL).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    console.log(data);\n    res.send({\n      data: data\n    }); // here's where we return data to the front end\n  })[\"catch\"](function (err) {\n    console.log(err);\n    res.redirect(\"/error\");\n  });\n} // Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\n\n\napp.route(\"/api\").get(function (req, res) {\n  // processDataForFrontEnd(req, res)\n  _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _sqlite2.open)(dbSettings);\n\n          case 2:\n            db = _context.sent;\n            _context.next = 5;\n            return db.all(\"SELECT * FROM user\");\n\n          case 5:\n            result = _context.sent;\n            console.log(\"Expected result\", result);\n            res.json(result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}).post(function (req, res) {\n  console.log(\"/api post request\", req.body);\n\n  if (!req.body.name) {\n    console.log(req.body);\n    res.status(\"418\").send(\"something went wrong, additionally i am a teapot\");\n  } else {\n    (0, _writeuser[\"default\"])(req.body.name, dbSettings).then(function (result) {\n      console.log(result);\n      res.send(\"your request was successful\"); // simple mode\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }\n}).put(function (req, res) {\n  dbSettings.insert(data);\n  console.log(\"this is supposed to be a PUT request\", req.body); // res.send('Form Submitted')\n});\napp.listen(port, function () {\n  console.log(\"Example app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkYlNldHRpbmdzIiwiZmlsZW5hbWUiLCJkcml2ZXIiLCJzcWxpdGUzIiwiRGF0YWJhc2UiLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJleHByZXNzIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInByb2Nlc3NEYXRhRm9yRnJvbnRFbmQiLCJyZXEiLCJyZXMiLCJiYXNlVVJMIiwidGhlbiIsInIiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsInNlbmQiLCJlcnIiLCJyZWRpcmVjdCIsInJvdXRlIiwiZ2V0IiwiZGIiLCJhbGwiLCJyZXN1bHQiLCJwb3N0IiwiYm9keSIsIm5hbWUiLCJzdGF0dXMiLCJwdXQiLCJpbnNlcnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBQ0E7O0FBS0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxRQUFRLEVBQUUsbUJBRE87QUFFakJDLEVBQUFBLE1BQU0sRUFBRUMsbUJBQVFDO0FBRkMsQ0FBbkI7QUFLQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUFKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxvQkFBUUMsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxvQkFBUUcsSUFBUixFQUFSO0FBQ0FULEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyw4QkFBZSxRQUFmLENBQVI7O0FBRUEsU0FBU0ksc0JBQVQsQ0FBZ0NDLEdBQWhDLEVBQXFDQyxHQUFyQyxFQUEwQztBQUN4QyxNQUFNQyxPQUFPLEdBQUcsRUFBaEIsQ0FEd0MsQ0FDcEI7QUFFcEI7QUFDQTtBQUNBOztBQUNBLDZCQUFNQSxPQUFOLEVBQ0dDLElBREgsQ0FDUSxVQUFDQyxDQUFEO0FBQUEsV0FBT0EsQ0FBQyxDQUFDTixJQUFGLEVBQVA7QUFBQSxHQURSLEVBRUdLLElBRkgsQ0FFUSxVQUFDRSxJQUFELEVBQVU7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVo7QUFDQUosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLENBQVM7QUFBRUgsTUFBQUEsSUFBSSxFQUFFQTtBQUFSLEtBQVQsRUFGYyxDQUVZO0FBQzNCLEdBTEgsV0FNUyxVQUFDSSxHQUFELEVBQVM7QUFDZEgsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVo7QUFDQVIsSUFBQUEsR0FBRyxDQUFDUyxRQUFKLENBQWEsUUFBYjtBQUNELEdBVEg7QUFVRCxDLENBRUQ7QUFDQTtBQUNBOzs7QUFDQXJCLEdBQUcsQ0FDQXNCLEtBREgsQ0FDUyxNQURULEVBRUdDLEdBRkgsQ0FFTyxVQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQjtBQUNBLDBEQUFDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ2tCLG1CQUFLakIsVUFBTCxDQURsQjs7QUFBQTtBQUNPNkIsWUFBQUEsRUFEUDtBQUFBO0FBQUEsbUJBRXNCQSxFQUFFLENBQUNDLEdBQUgsQ0FBTyxvQkFBUCxDQUZ0Qjs7QUFBQTtBQUVPQyxZQUFBQSxNQUZQO0FBR0NULFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaLEVBQStCUSxNQUEvQjtBQUNBZCxZQUFBQSxHQUFHLENBQUNILElBQUosQ0FBU2lCLE1BQVQ7O0FBSkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBRDtBQU1ELENBVkgsRUFXR0MsSUFYSCxDQVdRLFVBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNsQkssRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNQLEdBQUcsQ0FBQ2lCLElBQXJDOztBQUNBLE1BQUksQ0FBQ2pCLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU0MsSUFBZCxFQUFvQjtBQUNsQlosSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLEdBQUcsQ0FBQ2lCLElBQWhCO0FBQ0FoQixJQUFBQSxHQUFHLENBQ0FrQixNQURILENBQ1UsS0FEVixFQUVHWCxJQUZILENBRVEsa0RBRlI7QUFHRCxHQUxELE1BS087QUFDTCwrQkFBVVIsR0FBRyxDQUFDaUIsSUFBSixDQUFTQyxJQUFuQixFQUF5QmxDLFVBQXpCLEVBQ0dtQixJQURILENBQ1EsVUFBQ1ksTUFBRCxFQUFZO0FBQ2hCVCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEsTUFBWjtBQUNBZCxNQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBUyw2QkFBVCxFQUZnQixDQUV5QjtBQUMxQyxLQUpILFdBS1MsVUFBQ0MsR0FBRCxFQUFTO0FBQ2RILE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaO0FBQ0QsS0FQSDtBQVFIO0FBQUMsQ0EzQkosRUE0QkdXLEdBNUJILENBNEJPLFVBQUNwQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQmpCLEVBQUFBLFVBQVUsQ0FBQ3FDLE1BQVgsQ0FBa0JoQixJQUFsQjtBQUNFQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvRFAsR0FBRyxDQUFDaUIsSUFBeEQsRUFGZSxDQUdiO0FBQ0MsQ0FoQ1Q7QUFtQ0E1QixHQUFHLENBQUNpQyxNQUFKLENBQVdoQyxJQUFYLEVBQWlCLFlBQU07QUFDckJnQixFQUFBQSxPQUFPLENBQUNDLEdBQVIseUNBQTZDakIsSUFBN0M7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9LaW1teUsvRG9jdW1lbnRzL0dpdEh1Yi9rdWJhZGluaS5naXRodWIuaW8vbGFiXzEwLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZXNlIGFyZSBvdXIgcmVxdWlyZWQgbGlicmFyaWVzIHRvIG1ha2UgdGhlIHNlcnZlciB3b3JrLlxuXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJub2RlLWZldGNoXCI7XG5cbi8vIGNvbnN0IHNxbGl0ZTMgPSByZXF1aXJlKCdzcWxpdGUzJykudmVyYm9zZSgpOyAvLyBXZSdyZSBpbmNsdWRpbmcgYSBzZXJ2ZXItc2lkZSB2ZXJzaW9uIG9mIFNRTGl0ZSwgdGhlIGluLW1lbW9yeSBTUUwgc2VydmVyLlxuLy8gY29uc3Qgb3BlbiA9IHJlcXVpcmUoc3FsaXRlKS5vcGVuOyAvLyBXZSdyZSBpbmNsdWRpbmcgYSBzZXJ2ZXItc2lkZSB2ZXJzaW9uIG9mIFNRTGl0ZSwgdGhlIGluLW1lbW9yeSBTUUwgc2VydmVyLlxuXG5pbXBvcnQgc3FsaXRlMyBmcm9tIFwic3FsaXRlM1wiO1xuaW1wb3J0IHsgb3BlbiB9IGZyb20gXCJzcWxpdGVcIjtcbmltcG9ydCB3cml0ZVVzZXIgZnJvbSBcIi4vbGlicmFyaWVzL3dyaXRldXNlclwiO1xuXG5jb25zdCBkYlNldHRpbmdzID0ge1xuICBmaWxlbmFtZTogXCIuL3RtcC9kYXRhYmFzZS5kYlwiLFxuICBkcml2ZXI6IHNxbGl0ZTMuRGF0YWJhc2UsXG59O1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhcInB1YmxpY1wiKSk7XG5cbmZ1bmN0aW9uIHByb2Nlc3NEYXRhRm9yRnJvbnRFbmQocmVxLCByZXMpIHtcbiAgY29uc3QgYmFzZVVSTCA9IFwiXCI7IC8vIEVudGVyIHRoZSBVUkwgZm9yIHRoZSBkYXRhIHlvdSB3b3VsZCBsaWtlIHRvIHJldHJpZXZlIGhlcmVcblxuICAvLyBZb3VyIEZldGNoIEFQSSBjYWxsIHN0YXJ0cyBoZXJlXG4gIC8vIE5vdGUgdGhhdCBhdCBubyBwb2ludCBkbyB5b3UgXCJyZXR1cm5cIiBhbnl0aGluZyBmcm9tIHRoaXMgZnVuY3Rpb24gLVxuICAvLyBpdCBpbnN0ZWFkIGhhbmRsZXMgcmV0dXJuaW5nIGRhdGEgdG8geW91ciBmcm9udCBlbmQgYXQgbGluZSAzNC5cbiAgZmV0Y2goYmFzZVVSTClcbiAgICAudGhlbigocikgPT4gci5qc29uKCkpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgcmVzLnNlbmQoeyBkYXRhOiBkYXRhIH0pOyAvLyBoZXJlJ3Mgd2hlcmUgd2UgcmV0dXJuIGRhdGEgdG8gdGhlIGZyb250IGVuZFxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXMucmVkaXJlY3QoXCIvZXJyb3JcIik7XG4gICAgfSk7XG59XG5cbi8vIFN5bnRheCBjaGFuZ2UgLSB3ZSBkb24ndCB3YW50IHRvIHJlcGVhdCBvdXJzZWx2ZXMsXG4vLyBvciB3ZSdsbCBlbmQgdXAgd2l0aCBzcGVsbGluZyBlcnJvcnMgaW4gb3VyIGVuZHBvaW50cy5cbi8vXG5hcHBcbiAgLnJvdXRlKFwiL2FwaVwiKVxuICAuZ2V0KChyZXEsIHJlcykgPT4ge1xuICAgIC8vIHByb2Nlc3NEYXRhRm9yRnJvbnRFbmQocmVxLCByZXMpXG4gICAgKGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IGRiID0gYXdhaXQgb3BlbihkYlNldHRpbmdzKTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmFsbChcIlNFTEVDVCAqIEZST00gdXNlclwiKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiRXhwZWN0ZWQgcmVzdWx0XCIsIHJlc3VsdCk7XG4gICAgICByZXMuanNvbihyZXN1bHQpO1xuICAgIH0pKCk7XG4gIH0pXG4gIC5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiL2FwaSBwb3N0IHJlcXVlc3RcIiwgcmVxLmJvZHkpO1xuICAgIGlmICghcmVxLmJvZHkubmFtZSkge1xuICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICAgICAgcmVzXG4gICAgICAgIC5zdGF0dXMoXCI0MThcIilcbiAgICAgICAgLnNlbmQoXCJzb21ldGhpbmcgd2VudCB3cm9uZywgYWRkaXRpb25hbGx5IGkgYW0gYSB0ZWFwb3RcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdyaXRlVXNlcihyZXEuYm9keS5uYW1lLCBkYlNldHRpbmdzKVxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgICByZXMuc2VuZChcInlvdXIgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bFwiKTsgLy8gc2ltcGxlIG1vZGVcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgfX0pXG4gIC5wdXQoKHJlcSwgcmVzKSA9PiB7XG4gICAgZGJTZXR0aW5ncy5pbnNlcnQoZGF0YSk7XG4gICAgICBjb25zb2xlLmxvZyhcInRoaXMgaXMgc3VwcG9zZWQgdG8gYmUgYSBQVVQgcmVxdWVzdFwiLCByZXEuYm9keSlcbiAgICAgICAgLy8gcmVzLnNlbmQoJ0Zvcm0gU3VibWl0dGVkJylcbiAgICAgICAgfSlcbiAgO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH0hYCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dbSettings",
        "filename",
        "driver",
        "sqlite3",
        "Database",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "processDataForFrontEnd",
        "req",
        "res",
        "baseURL",
        "then",
        "r",
        "data",
        "console",
        "log",
        "send",
        "err",
        "redirect",
        "route",
        "get",
        "db",
        "all",
        "result",
        "post",
        "body",
        "name",
        "status",
        "put",
        "insert",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/",
      "sourcesContent": [
        "// These are our required libraries to make the server work.\n\nimport express from \"express\";\nimport fetch from \"node-fetch\";\n\n// const sqlite3 = require('sqlite3').verbose(); // We're including a server-side version of SQLite, the in-memory SQL server.\n// const open = require(sqlite).open; // We're including a server-side version of SQLite, the in-memory SQL server.\n\nimport sqlite3 from \"sqlite3\";\nimport { open } from \"sqlite\";\nimport writeUser from \"./libraries/writeuser\";\n\nconst dbSettings = {\n  filename: \"./tmp/database.db\",\n  driver: sqlite3.Database,\n};\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\napp.use(express.static(\"public\"));\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = \"\"; // Enter the URL for the data you would like to retrieve here\n\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n  fetch(baseURL)\n    .then((r) => r.json())\n    .then((data) => {\n      console.log(data);\n      res.send({ data: data }); // here's where we return data to the front end\n    })\n    .catch((err) => {\n      console.log(err);\n      res.redirect(\"/error\");\n    });\n}\n\n// Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\napp\n  .route(\"/api\")\n  .get((req, res) => {\n    // processDataForFrontEnd(req, res)\n    (async () => {\n      const db = await open(dbSettings);\n      const result = await db.all(\"SELECT * FROM user\");\n      console.log(\"Expected result\", result);\n      res.json(result);\n    })();\n  })\n  .post((req, res) => {\n    console.log(\"/api post request\", req.body);\n    if (!req.body.name) {\n      console.log(req.body);\n      res\n        .status(\"418\")\n        .send(\"something went wrong, additionally i am a teapot\");\n    } else {\n      writeUser(req.body.name, dbSettings)\n        .then((result) => {\n          console.log(result);\n          res.send(\"your request was successful\"); // simple mode\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }})\n  .put((req, res) => {\n    dbSettings.insert(data);\n      console.log(\"this is supposed to be a PUT request\", req.body)\n        // res.send('Form Submitted')\n        })\n  ;\n\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}!`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587952717000
  },
  "{\"sourceRoot\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10\",\"filename\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/writeuser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10",
      "filename": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/writeuser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/writeuser.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/writeuser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/",
        "sourceFileName": "writeuser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite3\"));\n\nvar _sqlite2 = require(\"sqlite\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction writeUser(_x, _x2) {\n  return _writeUser.apply(this, arguments);\n}\n\nfunction _writeUser() {\n  _writeUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(username, dbSettings) {\n    var db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"touched username \".concat(username));\n            _context.next = 3;\n            return (0, _sqlite2.open)(dbSettings);\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return db.exec('CREATE TABLE IF NOT EXISTS user (name)');\n\n          case 6:\n            _context.next = 8;\n            return db.exec(\"INSERT INTO user VALUES (\\\"\".concat(username, \"\\\")\"));\n\n          case 8:\n            _context.next = 10;\n            return db.each('SELECT * FROM user', function (err) {\n              console.log('writeuser', err);\n            });\n\n          case 10:\n            result = _context.sent;\n            console.log('Expected result', result);\n            return _context.abrupt(\"return\", result);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _writeUser.apply(this, arguments);\n}\n\nvar _default = writeUser; //   import writeUser from \"./libraries/writeuser\";\n// \n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRldXNlci5qcyJdLCJuYW1lcyI6WyJ3cml0ZVVzZXIiLCJ1c2VybmFtZSIsImRiU2V0dGluZ3MiLCJjb25zb2xlIiwibG9nIiwiZGIiLCJleGVjIiwiZWFjaCIsImVyciIsInJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztTQUVlQSxTOzs7Ozt1RUFBZixpQkFBeUJDLFFBQXpCLEVBQW1DQyxVQUFuQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDSUMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLDRCQUFnQ0gsUUFBaEM7QUFESjtBQUFBLG1CQUVxQixtQkFBS0MsVUFBTCxDQUZyQjs7QUFBQTtBQUVVRyxZQUFBQSxFQUZWO0FBQUE7QUFBQSxtQkFHVUEsRUFBRSxDQUFDQyxJQUFILENBQVEsd0NBQVIsQ0FIVjs7QUFBQTtBQUFBO0FBQUEsbUJBSVVELEVBQUUsQ0FBQ0MsSUFBSCxzQ0FBcUNMLFFBQXJDLFNBSlY7O0FBQUE7QUFBQTtBQUFBLG1CQUt5QkksRUFBRSxDQUFDRSxJQUFILENBQVEsb0JBQVIsRUFBOEIsVUFBQ0MsR0FBRCxFQUFTO0FBQ3hETCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBQXlCSSxHQUF6QjtBQUNILGFBRm9CLENBTHpCOztBQUFBO0FBS1VDLFlBQUFBLE1BTFY7QUFRSU4sWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUJBQVosRUFBK0JLLE1BQS9CO0FBUkosNkNBU1dBLE1BVFg7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztlQVllVCxTLEVBRWY7QUFFQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvS2ltbXlLL0RvY3VtZW50cy9HaXRIdWIva3ViYWRpbmkuZ2l0aHViLmlvL2xhYl8xMC9saWJyYXJpZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNxbGl0ZTMgZnJvbSAnc3FsaXRlMyc7XG5pbXBvcnQgeyBvcGVuIH0gZnJvbSAnc3FsaXRlJztcblxuYXN5bmMgZnVuY3Rpb24gd3JpdGVVc2VyKHVzZXJuYW1lLCBkYlNldHRpbmdzKSB7XG4gICAgY29uc29sZS5sb2coYHRvdWNoZWQgdXNlcm5hbWUgJHt1c2VybmFtZX1gKTtcbiAgICBjb25zdCBkYiA9IGF3YWl0IG9wZW4oZGJTZXR0aW5ncylcbiAgICBhd2FpdCBkYi5leGVjKCdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB1c2VyIChuYW1lKScpO1xuICAgIGF3YWl0IGRiLmV4ZWMoYElOU0VSVCBJTlRPIHVzZXIgVkFMVUVTIChcIiR7dXNlcm5hbWV9XCIpYCk7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuZWFjaCgnU0VMRUNUICogRlJPTSB1c2VyJywgKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnd3JpdGV1c2VyJywgZXJyKTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygnRXhwZWN0ZWQgcmVzdWx0JywgcmVzdWx0KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIFxuZXhwb3J0IGRlZmF1bHQgd3JpdGVVc2VyO1xuXG4vLyAgIGltcG9ydCB3cml0ZVVzZXIgZnJvbSBcIi4vbGlicmFyaWVzL3dyaXRldXNlclwiO1xuXG4vLyAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "writeuser.js"
      ],
      "names": [
        "writeUser",
        "username",
        "dbSettings",
        "console",
        "log",
        "db",
        "exec",
        "each",
        "err",
        "result"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;SAEeA,S;;;;;uEAAf,iBAAyBC,QAAzB,EAAmCC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,YAAAA,OAAO,CAACC,GAAR,4BAAgCH,QAAhC;AADJ;AAAA,mBAEqB,mBAAKC,UAAL,CAFrB;;AAAA;AAEUG,YAAAA,EAFV;AAAA;AAAA,mBAGUA,EAAE,CAACC,IAAH,CAAQ,wCAAR,CAHV;;AAAA;AAAA;AAAA,mBAIUD,EAAE,CAACC,IAAH,sCAAqCL,QAArC,SAJV;;AAAA;AAAA;AAAA,mBAKyBI,EAAE,CAACE,IAAH,CAAQ,oBAAR,EAA8B,UAACC,GAAD,EAAS;AACxDL,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,GAAzB;AACH,aAFoB,CALzB;;AAAA;AAKUC,YAAAA,MALV;AAQIN,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,MAA/B;AARJ,6CASWA,MATX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eAYeT,S,EAEf;AAEA",
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/kubadini.github.io/lab_10/libraries/",
      "sourcesContent": [
        "import sqlite3 from 'sqlite3';\nimport { open } from 'sqlite';\n\nasync function writeUser(username, dbSettings) {\n    console.log(`touched username ${username}`);\n    const db = await open(dbSettings)\n    await db.exec('CREATE TABLE IF NOT EXISTS user (name)');\n    await db.exec(`INSERT INTO user VALUES (\"${username}\")`);\n    const result = await db.each('SELECT * FROM user', (err) => {\n        console.log('writeuser', err);\n    });\n    console.log('Expected result', result);\n    return result;\n  }\n  \nexport default writeUser;\n\n//   import writeUser from \"./libraries/writeuser\";\n\n// "
      ]
    },
    "sourceType": "script",
    "mtime": 1587927752838
  },
  "{\"sourceRoot\":\"/Users/KimmyK/Documents/GitHub/INST377Final_Project/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/KimmyK/Documents/GitHub/INST377Final_Project\",\"filename\":\"/Users/KimmyK/Documents/GitHub/INST377Final_Project/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/KimmyK/Documents/GitHub/INST377Final_Project\",\"plugins\":[],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/KimmyK/Documents/GitHub/INST377Final_Project",
      "filename": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/KimmyK/Documents/GitHub/INST377Final_Project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "// These are our required libraries to make the server work.\nimport express from \"express\";\nimport fetch from \"node-fetch\"; // const sqlite3 = require('sqlite3').verbose(); // We're including a server-side version of SQLite, the in-memory SQL server.\n// const open = require(sqlite).open; // We're including a server-side version of SQLite, the in-memory SQL server.\n\nimport sqlite3 from \"sqlite3\";\nimport { open } from \"sqlite\";\nimport writeUser from \"./libraries/writeuser\";\nconst dbSettings = {\n  filename: \"./tmp/database.db\",\n  driver: sqlite3.Database\n};\nconst app = express();\nconst port = process.env.PORT || 3000;\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\napp.use(express.static(\"public\"));\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = \"https://data.princegeorgescountymd.gov/Education/Libraries/7k64-tdwr\"; // Enter the URL for the data you would like to retrieve here\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n\n  fetch(baseURL).then(r => r.json()).then(data => {\n    console.log(data);\n    res.send({\n      data: data\n    }); // here's where we return data to the front end\n  }).catch(err => {\n    console.log(err);\n    res.redirect(\"/error\");\n  });\n} // Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\n\n\napp.route(\"/api\").get((req, res) => {\n  // processDataForFrontEnd(req, res)\n  (async () => {\n    const db = await open(dbSettings);\n    const result = await db.all(\"SELECT * FROM user\");\n    console.log(\"Expected result\", result);\n    res.json(result);\n  })();\n}).post((req, res) => {\n  console.log(\"/api post request\", req.body);\n\n  if (!req.body.name) {\n    console.log(req.body);\n    res.status(\"418\").send(\"something went wrong, additionally i am a teapot\");\n  } else {\n    writeUser(req.body.name, dbSettings).then(result => {\n      console.log(result);\n      res.send(\"your request was successful\"); // simple mode\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n}).put((req, res) => {\n  console.log(\"this is supposed to be a PUT request\", req.body);\n  res.send('Form Saved');\n});\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}!`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiZmV0Y2giLCJzcWxpdGUzIiwib3BlbiIsIndyaXRlVXNlciIsImRiU2V0dGluZ3MiLCJmaWxlbmFtZSIsImRyaXZlciIsIkRhdGFiYXNlIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInN0YXRpYyIsInByb2Nlc3NEYXRhRm9yRnJvbnRFbmQiLCJyZXEiLCJyZXMiLCJiYXNlVVJMIiwidGhlbiIsInIiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsInNlbmQiLCJjYXRjaCIsImVyciIsInJlZGlyZWN0Iiwicm91dGUiLCJnZXQiLCJkYiIsInJlc3VsdCIsImFsbCIsInBvc3QiLCJib2R5IiwibmFtZSIsInN0YXR1cyIsInB1dCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixZQUFsQixDLENBRUE7QUFDQTs7QUFFQSxPQUFPQyxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixRQUFyQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsdUJBQXRCO0FBRUEsTUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxRQUFRLEVBQUUsbUJBRE87QUFFakJDLEVBQUFBLE1BQU0sRUFBRUwsT0FBTyxDQUFDTTtBQUZDLENBQW5CO0FBS0EsTUFBTUMsR0FBRyxHQUFHVCxPQUFPLEVBQW5CO0FBQ0EsTUFBTVUsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBSixHQUFHLENBQUNLLEdBQUosQ0FBUWQsT0FBTyxDQUFDZSxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVAsR0FBRyxDQUFDSyxHQUFKLENBQVFkLE9BQU8sQ0FBQ2lC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LyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZXNlIGFyZSBvdXIgcmVxdWlyZWQgbGlicmFyaWVzIHRvIG1ha2UgdGhlIHNlcnZlciB3b3JrLlxuXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IGZldGNoIGZyb20gXCJub2RlLWZldGNoXCI7XG5cbi8vIGNvbnN0IHNxbGl0ZTMgPSByZXF1aXJlKCdzcWxpdGUzJykudmVyYm9zZSgpOyAvLyBXZSdyZSBpbmNsdWRpbmcgYSBzZXJ2ZXItc2lkZSB2ZXJzaW9uIG9mIFNRTGl0ZSwgdGhlIGluLW1lbW9yeSBTUUwgc2VydmVyLlxuLy8gY29uc3Qgb3BlbiA9IHJlcXVpcmUoc3FsaXRlKS5vcGVuOyAvLyBXZSdyZSBpbmNsdWRpbmcgYSBzZXJ2ZXItc2lkZSB2ZXJzaW9uIG9mIFNRTGl0ZSwgdGhlIGluLW1lbW9yeSBTUUwgc2VydmVyLlxuXG5pbXBvcnQgc3FsaXRlMyBmcm9tIFwic3FsaXRlM1wiO1xuaW1wb3J0IHsgb3BlbiB9IGZyb20gXCJzcWxpdGVcIjtcbmltcG9ydCB3cml0ZVVzZXIgZnJvbSBcIi4vbGlicmFyaWVzL3dyaXRldXNlclwiO1xuXG5jb25zdCBkYlNldHRpbmdzID0ge1xuICBmaWxlbmFtZTogXCIuL3RtcC9kYXRhYmFzZS5kYlwiLFxuICBkcml2ZXI6IHNxbGl0ZTMuRGF0YWJhc2UsXG59O1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhcInB1YmxpY1wiKSk7XG5cbmZ1bmN0aW9uIHByb2Nlc3NEYXRhRm9yRnJvbnRFbmQocmVxLCByZXMpIHtcbiAgY29uc3QgYmFzZVVSTCA9IFwiaHR0cHM6Ly9kYXRhLnByaW5jZWdlb3JnZXNjb3VudHltZC5nb3YvRWR1Y2F0aW9uL0xpYnJhcmllcy83azY0LXRkd3JcIjsgLy8gRW50ZXIgdGhlIFVSTCBmb3IgdGhlIGRhdGEgeW91IHdvdWxkIGxpa2UgdG8gcmV0cmlldmUgaGVyZVxuXG4gIC8vIFlvdXIgRmV0Y2ggQVBJIGNhbGwgc3RhcnRzIGhlcmVcbiAgLy8gTm90ZSB0aGF0IGF0IG5vIHBvaW50IGRvIHlvdSBcInJldHVyblwiIGFueXRoaW5nIGZyb20gdGhpcyBmdW5jdGlvbiAtXG4gIC8vIGl0IGluc3RlYWQgaGFuZGxlcyByZXR1cm5pbmcgZGF0YSB0byB5b3VyIGZyb250IGVuZCBhdCBsaW5lIDM0LlxuICBmZXRjaChiYXNlVVJMKVxuICAgIC50aGVuKChyKSA9PiByLmpzb24oKSlcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICByZXMuc2VuZCh7IGRhdGE6IGRhdGEgfSk7IC8vIGhlcmUncyB3aGVyZSB3ZSByZXR1cm4gZGF0YSB0byB0aGUgZnJvbnQgZW5kXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlcy5yZWRpcmVjdChcIi9lcnJvclwiKTtcbiAgICB9KTtcbn1cblxuLy8gU3ludGF4IGNoYW5nZSAtIHdlIGRvbid0IHdhbnQgdG8gcmVwZWF0IG91cnNlbHZlcyxcbi8vIG9yIHdlJ2xsIGVuZCB1cCB3aXRoIHNwZWxsaW5nIGVycm9ycyBpbiBvdXIgZW5kcG9pbnRzLlxuLy9cbmFwcFxuICAucm91dGUoXCIvYXBpXCIpXG4gIC5nZXQoKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gcHJvY2Vzc0RhdGFGb3JGcm9udEVuZChyZXEsIHJlcylcbiAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgZGIgPSBhd2FpdCBvcGVuKGRiU2V0dGluZ3MpO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuYWxsKFwiU0VMRUNUICogRlJPTSB1c2VyXCIpO1xuICAgICAgY29uc29sZS5sb2coXCJFeHBlY3RlZCByZXN1bHRcIiwgcmVzdWx0KTtcbiAgICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gICAgfSkoKTtcbiAgfSlcbiAgLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCIvYXBpIHBvc3QgcmVxdWVzdFwiLCByZXEuYm9keSk7XG4gICAgaWYgKCFyZXEuYm9keS5uYW1lKSB7XG4gICAgICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XG4gICAgICByZXNcbiAgICAgICAgLnN0YXR1cyhcIjQxOFwiKVxuICAgICAgICAuc2VuZChcInNvbWV0aGluZyB3ZW50IHdyb25nLCBhZGRpdGlvbmFsbHkgaSBhbSBhIHRlYXBvdFwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgd3JpdGVVc2VyKHJlcS5ib2R5Lm5hbWUsIGRiU2V0dGluZ3MpXG4gICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAgIHJlcy5zZW5kKFwieW91ciByZXF1ZXN0IHdhcyBzdWNjZXNzZnVsXCIpOyAvLyBzaW1wbGUgbW9kZVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pO1xuICB9fSlcbiAgLnB1dCgocmVxLCByZXMpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwidGhpcyBpcyBzdXBwb3NlZCB0byBiZSBhIFBVVCByZXF1ZXN0XCIsIHJlcS5ib2R5KVxuICAgICAgICByZXMuc2VuZCgnRm9ybSBTYXZlZCcpXG4gICAgICAgIH0pXG4gIDtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKGBFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9IWApO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "fetch",
        "sqlite3",
        "open",
        "writeUser",
        "dbSettings",
        "filename",
        "driver",
        "Database",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "static",
        "processDataForFrontEnd",
        "req",
        "res",
        "baseURL",
        "then",
        "r",
        "data",
        "console",
        "log",
        "send",
        "catch",
        "err",
        "redirect",
        "route",
        "get",
        "db",
        "result",
        "all",
        "post",
        "body",
        "name",
        "status",
        "put",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/KimmyK/Documents/GitHub/INST377Final_Project/",
      "sourcesContent": [
        "// These are our required libraries to make the server work.\n\nimport express from \"express\";\nimport fetch from \"node-fetch\";\n\n// const sqlite3 = require('sqlite3').verbose(); // We're including a server-side version of SQLite, the in-memory SQL server.\n// const open = require(sqlite).open; // We're including a server-side version of SQLite, the in-memory SQL server.\n\nimport sqlite3 from \"sqlite3\";\nimport { open } from \"sqlite\";\nimport writeUser from \"./libraries/writeuser\";\n\nconst dbSettings = {\n  filename: \"./tmp/database.db\",\n  driver: sqlite3.Database,\n};\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\napp.use(express.static(\"public\"));\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = \"https://data.princegeorgescountymd.gov/Education/Libraries/7k64-tdwr\"; // Enter the URL for the data you would like to retrieve here\n\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n  fetch(baseURL)\n    .then((r) => r.json())\n    .then((data) => {\n      console.log(data);\n      res.send({ data: data }); // here's where we return data to the front end\n    })\n    .catch((err) => {\n      console.log(err);\n      res.redirect(\"/error\");\n    });\n}\n\n// Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\napp\n  .route(\"/api\")\n  .get((req, res) => {\n    // processDataForFrontEnd(req, res)\n    (async () => {\n      const db = await open(dbSettings);\n      const result = await db.all(\"SELECT * FROM user\");\n      console.log(\"Expected result\", result);\n      res.json(result);\n    })();\n  })\n  .post((req, res) => {\n    console.log(\"/api post request\", req.body);\n    if (!req.body.name) {\n      console.log(req.body);\n      res\n        .status(\"418\")\n        .send(\"something went wrong, additionally i am a teapot\");\n    } else {\n      writeUser(req.body.name, dbSettings)\n        .then((result) => {\n          console.log(result);\n          res.send(\"your request was successful\"); // simple mode\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }})\n  .put((req, res) => {\n      console.log(\"this is supposed to be a PUT request\", req.body)\n        res.send('Form Saved')\n        })\n  ;\n\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}!`);\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1588210721645
  }
}